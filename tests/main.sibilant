(namespace tests)
(include "../header")

(import-namespace kit)

(require! 'assert)

(include "../inc/unit-testing")
(import-namespace unit-test)






(def markdown-list-element (depth message)
  (+ (.repeat " " (* depth 2)) "+ " message))

(unit remember-macro ((table (new Map)))

      (expect "the last of its expression arguments if there is not already an element in the map at the given index"
              (if (not (.has table "key"))
                  (let ((v null))
                    (assign value (remember table "key" 5))
                    (= value 5))
                  (throw (new Error "There was already a value in the array at the index"))))

      (expect "the value from cache to be returned if an element exists in the map at the given key index"
              (.set table "key" 5)
              (if (.has table "key")
                  (= 5 (remember table "key" 5))
                  (throw (new Error "there was no value at index")))))
(unit lit-macros ()
      (unit def ()
            (expect "a method to be a part of the object litteral"
                    (var x (lit (def add1 (a) (+ a 1))))
                    (= (.add1 x 5) 6)))
      (unit def-generic ()
            (expect "a method to be a part of the object litteral"
                    (var x (lit (def add1 (a) (+ a 1))))
                    (= (.add1 x 5) 6))))
