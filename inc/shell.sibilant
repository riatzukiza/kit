(namespace shell)

(include "./macros.sibilant")
(import-namespace kit)

;; I want to redo the shell code to be more stream oriented.
;; maybe redo is not the best way, I should leave these how they are and add new code else where.
(alias-macro property prop)
(require! R "ramda"
          "child_process")

(def worker (p f done)
  (.then (.resolve Promise (f)) done done))

(def then-always (p f )
  (.then p
         (=> (result) (f result))
         (=> (err) (f))))

(def either (f g v)
  (if v (f v) (g v)))

(def handle-exec (s f e stdout stderr)
  )

(def-promised exec (c args)
  (.exec child_process c args (=> (e stdout stderr)

                                  (if (> (length stderr) 0)
                                      (print "stderr" stderr.to-string()))
                                  (if e (fail e) (success stdout.to-string())))))

(macro always (p arg-name ...body)
       `(then-always @p (=> (@arg-name) ...@body)))

(macro shell-command-string (...sub-commands)
       `(.join
        [...@(map sub-commands (command)
                  (if (bracket? command)
                      `(.join @command "")
                      (expression? command)
                      command
                      `(quote @command))) ] " ")
       )
(macro shell-command (...sub-commands)
       `(exec (.join
               [...@(map sub-commands (command)
                         (if (bracket? command)
                             `(.join @command "")
                             (expression? command)
                             command
                             `(quote @command))) ] " ")))

(macro sequence (start name ...args)
       `(pipe @start
              ...@(map args (arg)
                       `(@name ...@(content-of arg)))))
(macro shell (...commands)
       `(sequence (shell-command ...@(content-of (first commands))) always
                  ...@(map (rest commands) (c) `(result (shell-command ...@ (content-of c))))))
(comment (shell
  (git branch [compile-branch])
  (git checkout [compile-branch])
  (git add "." )
  (git commit "-m" (+ "compiled " path))
  (git checkout  [branch-name])))

