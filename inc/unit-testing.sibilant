(meta (namespace unit-test)
      (macro unit (name-symbol args ...body)
             `(let ((name (quote @name-symbol))
                    ...@(content-of args))

                (print "#" name)
                ...@body))


      (macro expect (message ...body)
             `(scoped (print (markdown-list-element 0 @message))
                      (var reason null)
                      (var result (try (scoped ...@body)
                                       (do (assign reason e.stack)
                                           false)))

                      (if result (print (markdown-list-element 1 "pass"))
                          (do (print (markdown-list-element 1 "fail"))
                              (when reason (print (markdown-list-element 1 reason))))))))
