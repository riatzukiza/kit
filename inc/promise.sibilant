(macro chain-promise (p ...rest)
       (if (empty? rest)
           p
           `(then-do @p (chain-promise ...@rest))))

(macro async-let (vars ...body)
       "A let style form that captures the resolved values of the variables defined."
       `(then (Promise.all [ ...@(map vars.contents (v) (second v.contents))])
              [...@(map vars.contents (v) (first v.contents))]
              ...@body))

(alias-macro async-let alet )

(macro async-let* (vars ...body)
       "Same as async-let, except each variables definition can reference the variables declared before them."
       (if (> vars.contents.length 1)
           `(async-let (@(first vars.contents))
              (async-let* (...@(rest vars.contents))
                          ...@body))))

(alias-macro async-let* alet*)
